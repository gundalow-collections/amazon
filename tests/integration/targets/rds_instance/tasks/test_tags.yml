- block:
  - name: set up aws connection info
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
        region: '{{ aws_region }}'
    no_log: true
  - name: Ensure the resource doesn't exist
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
  - assert:
      that:
      - not result.changed
    ignore_errors: true
  - name: Create a mariadb instance
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      tags:
        Name: '{{ instance_id }}'
        Created_by: Ansible rds_instance tests
  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == '{{ instance_id }}'
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}'
      - result.tags.Created_by == 'Ansible rds_instance tests'
  - name: Test idempotence omitting tags
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
  - assert:
      that:
      - not result.changed
      - result.tags | length == 2
  - name: Test tags are not purged if purge_tags is False
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      tags: {}
      purge_tags: false
  - assert:
      that:
      - not result.changed
      - result.tags | length == 2
  - name: Add a tag and remove a tag
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      state: present
      tags:
        Name: '{{ instance_id }}-new'
        Created_by: Ansible rds_instance tests
      purge_tags: true
  - assert:
      that:
      - result.changed
      - result.tags | length == 2
      - result.tags.Name == '{{ instance_id }}-new'
  - name: Remove all tags
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      state: present
      engine: mariadb
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      tags: {}
  - assert:
      that:
      - result.changed
      - not result.tags
  - name: snapshot instance without tags
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: present
      wait: true
  - assert:
      that:
      - result.changed
      - not result.tags
  - name: add tags to snapshot
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: present
      tags:
        one: hello
        two: world
  - assert:
      that:
      - result.changed
      - result.tags | length == 2
  - name: add tags to snapshot - idempotence
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: present
      tags:
        one: hello
        two: world
  - assert:
      that:
      - not result.changed
      - result.tags | length == 2
  - name: add tag to snapshot using purge_tags False
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: present
      tags:
        one: hello
        three: another
      purge_tags: false
  - assert:
      that:
      - result.changed
      - result.tags | length == 3
  - name: rerun tags but not setting purge_tags
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: present
      tags:
        one: hello
        three: another
  - assert:
      that:
      - result.changed
      - result.tags | length == 2
  - name: rerun tags but not setting purge_tags - idempotence
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: present
      tags:
        one: hello
        three: another
  - assert:
      that:
      - not result.changed
      - result.tags | length == 2
  - name: remove snapshot
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: absent
      wait: true
  - assert:
      that:
      - result.changed
  - name: create snapshot with tags
    register: result
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: present
      tags:
        one: hello
        three: another
      purge_tags: true
      wait: true
  - assert:
      that:
      - result.changed
      - result.tags | length == 2
  always:
  - name: tidy up snapshot
    ignore_errors: true
    ansible.amazon.rds_snapshot:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      db_snapshot_identifier: '{{ resource_prefix }}-test-tags'
      state: absent
  - name: Ensure the resource doesn't exist
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      db_instance_identifier: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
  - assert:
      that:
      - result.changed
