- block:
  - name: set up aws connection info
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
        region: '{{ aws_region }}'
    no_log: true
  - name: Ensure the resource doesn't exist
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
  - assert:
      that:
      - not result.changed
    ignore_errors: true
  - name: Create a mariadb instance
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      engine: mariadb
      engine_version: 10.1.26
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == '{{ instance_id }}'
  - name: Modify the instance name without immediate application
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      new_id: '{{ modified_instance_id }}'
      apply_immediately: false
  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == "{{ instance_id }}"
  - name: Immediately apply the pending update
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      new_id: '{{ modified_instance_id }}'
      apply_immediately: true
  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == "{{ modified_instance_id }}"
  - name: Modify the instance immediately
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ modified_instance_id }}'
      state: present
      new_id: '{{ instance_id }}'
      apply_immediately: true
  - assert:
      that:
      - result.changed
      - result.db_instance_identifier == "{{ instance_id }}"
  - name: Check mode - modify the password
    register: result
    check_mode: true
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      password: '{{ password }}'
      force_update_password: true
      apply_immediately: true
  - assert:
      that:
      - result.changed
  - name: Modify the password
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      password: '{{ password }}'
      force_update_password: true
      apply_immediately: true
  - assert:
      that:
      - result.changed
  - name: Modify several attributes
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      allocated_storage: 30
      db_instance_class: '{{ modified_db_instance_class }}'
      backup_retention_period: 2
      preferred_backup_window: 05:00-06:00
      preferred_maintenance_window: mon:06:20-mon:06:50
      engine_version: 10.2.21
      allow_major_version_upgrade: true
      auto_minor_version_upgrade: false
      port: 1150
      max_allocated_storage: 100
      apply_immediately: true
  - assert:
      that:
      - result.changed
      - '"allocated_storage" in result.pending_modified_values or result.allocated_storage
        == 30'
      - '"max_allocated_storage" in result.pending_modified_values or result.max_allocated_storage
        == 100'
      - '"port" in result.pending_modified_values or result.endpoint.port == 1150'
      - '"db_instance_class" in result.pending_modified_values or result.db_instance_class
        == "db.t2.medium"'
      - '"engine_version" in result.pending_modified_values or result.engine_version
        == "10.2.21"'
  - name: Idempotence modifying several pending attributes
    register: result
    retries: 30
    delay: 10
    until: result is not failed
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: present
      allocated_storage: 30
      db_instance_class: '{{ modified_db_instance_class }}'
      backup_retention_period: 2
      preferred_backup_window: 05:00-06:00
      preferred_maintenance_window: mon:06:20-mon:06:50
      engine_version: 10.2.21
      allow_major_version_upgrade: true
      auto_minor_version_upgrade: false
      port: 1150
      max_allocated_storage: 100
  - assert:
      that:
      - not result.changed
      - '"allocated_storage" in result.pending_modified_values or result.allocated_storage
        == 30'
      - '"max_allocated_storage" in result.pending_modified_values or result.max_allocated_storage
        == 100'
      - '"port" in result.pending_modified_values or result.endpoint.port == 1150'
      - '"db_instance_class" in result.pending_modified_values or result.db_instance_class
        == "db.t2.medium"'
      - '"engine_version" in result.pending_modified_values or result.engine_version
        == "10.2.21"'
  - name: Delete the instance
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
  - assert:
      that:
      - result.changed
      - '"pending_modified_values" not in result'
  always:
  - name: Delete the instance
    loop:
    - '{{ instance_id }}'
    - '{{ modified_instance_id }}'
    ignore_errors: true
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      id: '{{ item }}'
      state: absent
      skip_final_snapshot: true
