- block:
  - name: set the two regions for the source DB and the replica
    set_fact:
      region_src: '{{ aws_region }}'
      region_dest: '{{ aws_region }}'
  - name: set up aws connection info
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
    no_log: true
  - name: Ensure the resource doesn't exist
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
      region: '{{ region_src }}'
  - assert:
      that:
      - not result.changed
    ignore_errors: true
  - name: Create a source DB instance
    register: source_db
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}'
      state: present
      engine: mysql
      backup_retention_period: 1
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_src }}'
  - assert:
      that:
      - source_db.changed
      - source_db.db_instance_identifier == '{{ instance_id }}'
  - name: Create a read replica in a different region
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}-replica'
      state: present
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      read_replica: true
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
  - name: Test idempotence with a read replica
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}-replica'
      state: present
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
  - assert:
      that:
      - not result.changed
  - name: Test idempotence with read_replica=True
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: true
      source_db_instance_identifier: '{{ instance_id }}'
      engine: mysql
      username: '{{ username }}'
      password: '{{ password }}'
      db_instance_class: '{{ db_instance_class }}'
      allocated_storage: '{{ allocated_storage }}'
      region: '{{ region_dest }}'
  - name: Promote the read replica
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: false
      region: '{{ region_dest }}'
  - assert:
      that:
      - result.changed
  - name: Test idempotence
    register: result
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}-replica'
      state: present
      read_replica: false
      region: '{{ region_dest }}'
  - assert:
      that:
      - not result.changed
  always:
  - name: Remove the DB instance
    ignore_errors: true
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}'
      state: absent
      skip_final_snapshot: true
      region: '{{ region_src }}'
  - name: Remove the DB replica
    ignore_errors: true
    ansible.amazon.rds_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      id: '{{ instance_id }}-replica'
      state: absent
      skip_final_snapshot: true
      region: '{{ region_dest }}'
