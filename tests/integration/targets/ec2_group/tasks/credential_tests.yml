- block:
  - name: test failure with no parameters
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group: null
  - name: assert failure with no parameters
    assert:
      that:
      - result.failed
      - 'result.msg == "one of the following is required: name, group_id"'
  - name: test failure with only name
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
  - name: assert failure with only name
    assert:
      that:
      - result.failed
      - result.msg == "Must provide description when state is present."
  - name: test failure with only description
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      description: '{{ec2_group_description}}'
  - name: assert failure with only description
    assert:
      that:
      - result.failed
      - 'result.msg == "one of the following is required: name, group_id"'
  - name: test failure with empty description (AWS API requires non-empty string desc)
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
      description: ''
      region: '{{ec2_region}}'
  - name: assert failure with empty description
    assert:
      that:
      - result.failed
      - result.msg == "Must provide description when state is present."
  - name: test valid region parameter
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
      description: '{{ec2_group_description}}'
      region: '{{ec2_region}}'
  - name: assert valid region parameter
    assert:
      that:
      - result.failed
      - '"Unable to locate credentials" in result.msg'
  - name: test environment variable EC2_REGION
    environment:
      EC2_REGION: '{{ec2_region}}'
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
      description: '{{ec2_group_description}}'
  - name: assert environment variable EC2_REGION
    assert:
      that:
      - result.failed
      - '"Unable to locate credentials" in result.msg'
  - name: test invalid ec2_url parameter
    environment:
      EC2_URL: bogus.example.com
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
      description: '{{ec2_group_description}}'
  - name: assert invalid ec2_url parameter
    assert:
      that:
      - result.failed
      - result.msg.startswith("The ec2_group module requires a region")
  - name: test valid ec2_url parameter
    environment:
      EC2_URL: '{{ec2_url}}'
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
      description: '{{ec2_group_description}}'
  - name: assert valid ec2_url parameter
    assert:
      that:
      - result.failed
      - result.msg.startswith("The ec2_group module requires a region")
  - name: test credentials from environment
    environment:
      EC2_REGION: '{{ec2_region}}'
      EC2_ACCESS_KEY: bogus_access_key
      EC2_SECRET_KEY: bogus_secret_key
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
      description: '{{ec2_group_description}}'
  - name: assert ec2_group with valid ec2_url
    assert:
      that:
      - result.failed
      - '"validate the provided access credentials" in result.msg'
  - name: test credential parameters
    register: result
    ignore_errors: true
    ansible.amazon.ec2_group:
      name: '{{ec2_group_name}}'
      description: '{{ec2_group_description}}'
      ec2_region: '{{ec2_region}}'
      ec2_access_key: bogus_access_key
      ec2_secret_key: bogus_secret_key
  - name: assert credential parameters
    assert:
      that:
      - result.failed
      - '"validate the provided access credentials" in result.msg'
