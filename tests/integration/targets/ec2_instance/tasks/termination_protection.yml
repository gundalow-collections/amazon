- block:
  - name: set connection information for all tasks
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
        region: '{{ aws_region }}'
    no_log: true
  - name: Make termination-protected instance in the testing subnet created in the
      test VPC
    register: in_test_vpc
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-test-protected-instance-in-vpc'
      image_id: '{{ ec2_ami_image[aws_region] }}'
      tags:
        TestId: '{{ resource_prefix }}'
      security_groups: '{{ sg.group_id }}'
      vpc_subnet_id: '{{ testing_subnet_b.subnet.id }}'
      termination_protection: true
      instance_type: t2.micro
      state: running
      wait: true
  - name: Make termination-protected instance in the testing subnet created in the
      test VPC(check mode)
    check_mode: true
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-test-protected-instance-in-vpc-checkmode'
      image_id: '{{ ec2_ami_image[aws_region] }}'
      tags:
        TestId: '{{ resource_prefix }}'
      security_groups: '{{ sg.group_id }}'
      vpc_subnet_id: '{{ testing_subnet_b.subnet.id }}'
      termination_protection: true
      instance_type: t2.micro
  - name: fact presented ec2 instance
    register: presented_instance_fact
    ansible.amazon.ec2_instance_info:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      filters:
        tag:Name: '{{ resource_prefix }}-test-protected-instance-in-vpc'
        instance-state-name: running
  - name: fact checkmode ec2 instance
    register: checkmode_instance_fact
    ansible.amazon.ec2_instance_info:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      filters:
        tag:Name: '{{ resource_prefix }}-test-protected-instance-in-vpc-checkmode'
  - name: Confirm whether the check mode is working normally.
    assert:
      that:
      - '{{ presented_instance_fact.instances | length }} > 0'
      - '''{{ presented_instance_fact.instances.0.state.name }}'' in [''running'',
        ''pending'']'
      - '{{ checkmode_instance_fact.instances | length }} == 0'
  - name: Try to terminate the instance
    register: bad_terminate
    ignore_errors: true
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      state: absent
      name: '{{ resource_prefix }}-test-protected-instance-in-vpc'
      image_id: '{{ ec2_ami_image[aws_region] }}'
      tags:
        TestId: '{{ resource_prefix }}'
      security_groups: '{{ sg.group_id }}'
      vpc_subnet_id: '{{ testing_subnet_b.subnet.id }}'
      termination_protection: true
      instance_type: t2.micro
  - name: Cannot terminate protected instance
    assert:
      that:
      - bad_terminate is failed
  - name: Alter termination protection setting
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-test-protected-instance-in-vpc'
      image_id: '{{ ec2_ami_image[aws_region] }}'
      vpc_subnet_id: '{{ testing_subnet_b.subnet.id }}'
      termination_protection: false
      instance_type: t2.micro
  - name: Try to terminate the instance again (should work)
    register: terminate_results
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-test-protected-instance-in-vpc'
      image_id: '{{ ec2_ami_image[aws_region] }}'
      vpc_subnet_id: '{{ testing_subnet_b.subnet.id }}'
      instance_type: t2.micro
      state: absent
      wait: false
  - assert:
      that: terminate_results is not failed
  always:
  - name: Terminate instance
    register: result
    ignore_errors: true
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      filters:
        tag:TestId: '{{ resource_prefix }}'
      state: absent
      wait: false
