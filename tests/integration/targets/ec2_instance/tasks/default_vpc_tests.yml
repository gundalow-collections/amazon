- block:
  - name: set connection information for all tasks
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
        region: '{{ aws_region }}'
    no_log: true
  - name: Make instance in a default subnet of the VPC
    register: in_default_vpc
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-test-default-vpc'
      image_id: '{{ ec2_ami_image[aws_region] }}'
      tags:
        TestId: '{{ resource_prefix }}'
      security_groups: '{{ sg.group_id }}'
      instance_type: t2.micro
      wait: false
  - name: Make instance in a default subnet of the VPC(check mode)
    check_mode: true
    ansible.amazon.ec2_instance:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-test-default-vpc-checkmode'
      image_id: '{{ ec2_ami_image[aws_region] }}'
      tags:
        TestId: '{{ resource_prefix }}'
      security_groups: '{{ sg.group_id }}'
      instance_type: t2.micro
  - name: fact presented ec2 instance
    register: presented_instance_fact
    ansible.amazon.ec2_instance_info:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      filters:
        tag:Name: '{{ resource_prefix }}-test-default-vpc'
  - name: fact checkmode ec2 instance
    register: checkmode_instance_fact
    ansible.amazon.ec2_instance_info:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      filters:
        tag:Name: '{{ resource_prefix }}-test-default-vpc-checkmode'
  - name: Confirm whether the check mode is working normally.
    assert:
      that:
      - '{{ presented_instance_fact.instances | length }} > 0'
      - '{{ checkmode_instance_fact.instances | length }} == 0'
  - name: Terminate instance
    ansible.amazon.ec2:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      instance_ids: '{{ in_default_vpc.instance_ids }}'
      state: absent
  always:
  - name: Terminate test-default-vpc instance
    ignore_errors: true
    ansible.amazon.ec2:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      filters:
        tag:Name: '{{ resource_prefix }}-test-default-vpc'
      state: absent
