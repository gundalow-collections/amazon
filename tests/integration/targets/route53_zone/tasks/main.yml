- block:
  - name: set connection information for all tasks
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
        region: '{{ aws_region }}'
    no_log: true
  - name: Create VPC for use in testing
    register: testing_vpc
    ansible.amazon.ec2_vpc_net:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-vpc'
      cidr_block: 10.22.32.0/23
      tags:
        Name: Ansible ec2_instance Testing VPC
      tenancy: default
  - name: Create a public zone
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public'
      comment: original comment
      state: present
  - assert:
      that:
      - output.changed
      - output.comment == 'original comment'
      - output.name == '{{ resource_prefix }}.public.'
      - not output.private_zone
  - name: Create a public zone (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.check.public'
      comment: original comment
      state: present
  - assert:
      that:
      - output.changed
      - output.comment == 'original comment'
      - output.name == '{{ resource_prefix }}.check.public.'
      - not output.private_zone
  - name: Do an idemptotent update of a public zone
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public'
      comment: original comment
      state: present
  - assert:
      that:
      - not output.changed
      - output.comment == 'original comment'
      - output.name == '{{ resource_prefix }}.public.'
      - not output.private_zone
  - name: Do an idemptotent update of a public zone (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public'
      comment: original comment
      state: present
  - assert:
      that:
      - not output.changed
      - output.comment == 'original comment'
      - output.name == '{{ resource_prefix }}.public.'
      - not output.private_zone
  - name: Update comment of a public zone
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public'
      comment: updated comment
      state: present
  - assert:
      that:
      - output.changed
      - output.result.comment == "updated comment"
  - name: Update comment of a public zone (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public'
      comment: updated comment for check
      state: present
  - assert:
      that:
      - output.changed
      - output.result.comment == "updated comment for check"
  - name: Delete public zone (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public'
      state: absent
  - assert:
      that:
      - output.changed
      - '''Successfully deleted'' in output.result'
  - name: Delete public zone
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public'
      state: absent
  - assert:
      that:
      - output.changed
      - '''Successfully deleted'' in output.result'
  - name: Create a private zone (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      comment: original comment
      state: present
  - assert:
      that:
      - output.changed
  - name: Create a private zone
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      comment: original comment
      state: present
  - assert:
      that:
      - output.changed
  - name: Idemptotent update a private zone
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      comment: original comment
      state: present
  - assert:
      that:
      - not output.changed
      - '''There is already a private hosted zone in the same region with the same
        VPC'' in output.msg'
  - name: Idemptotent update a private zone (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      comment: original comment
      state: present
  - assert:
      that:
      - not output.changed
      - '''There is already a private hosted zone in the same region with the same
        VPC'' in output.msg'
  - name: Update private zone comment
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      comment: updated_comment
      state: present
  - assert:
      that:
      - output.changed
      - output.result.comment == "updated_comment"
  - name: Update private zone comment (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      comment: updated_comment check
      state: present
  - assert:
      that:
      - output.changed
      - output.result.comment == "updated_comment check"
  - name: Try to delete private zone without setting vpc_id and vpc_region
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      state: absent
  - assert:
      that:
      - not output.changed
      - output.result == 'No zone to delete.'
  - name: Try to delete private zone without setting vpc_id and vpc_region (CHECK
      MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      state: absent
  - assert:
      that:
      - not output.changed
      - output.result == 'No zone to delete.'
  - name: Try to delete a public zone that does not exists
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.publicfake'
      comment: original comment
      state: absent
  - assert:
      that:
      - not output.changed
      - output.result == 'No zone to delete.'
  - name: Try to delete a public zone that does not exists (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.publicfake'
      comment: original comment
      state: absent
  - assert:
      that:
      - not output.changed
      - output.result == 'No zone to delete.'
  - name: Delete private zone (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      state: absent
  - assert:
      that:
      - output.changed
      - '''Successfully deleted'' in output.result'
  - name: Delete private zone
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      state: absent
  - assert:
      that:
      - output.changed
      - '''Successfully deleted'' in output.result'
  - name: Create a public zone
    register: new_zone
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public2'
      comment: this is an example
      state: present
  - name: Delete zone using attribute hosted_zone_id (CHECK MODE)
    register: output
    check_mode: true
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public2'
      hosted_zone_id: '{{new_zone.zone_id}}'
      state: absent
  - assert:
      that:
      - output.changed
      - '''Successfully deleted'' in output.result'
  - name: Delete zone using attribute hosted_zone_id
    register: output
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.public2'
      hosted_zone_id: '{{new_zone.zone_id}}'
      state: absent
  - assert:
      that:
      - output.changed
      - '''Successfully deleted'' in output.result'
  always:
  - name: Ensure public zone is deleted
    register: removed
    until: removed is not failed
    ignore_errors: true
    retries: 10
    with_items:
    - '{{ resource_prefix }}.public'
    - '{{ resource_prefix }}.public2'
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      zone: '{{ item }}'
      state: absent
  - name: Ensure private zone is deleted
    register: removed
    until: removed is not failed
    ignore_errors: true
    retries: 10
    ansible.amazon.route53_zone:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      vpc_id: '{{ testing_vpc.vpc.id }}'
      vpc_region: '{{ aws_region }}'
      zone: '{{ resource_prefix }}.private'
      state: absent
  - name: remove the VPC
    register: removed
    until: removed is not failed
    ignore_errors: true
    retries: 10
    ansible.amazon.ec2_vpc_net:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ resource_prefix }}-vpc'
      cidr_block: 10.22.32.0/23
      state: absent
