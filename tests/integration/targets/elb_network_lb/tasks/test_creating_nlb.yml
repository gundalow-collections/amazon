- block:
  - name: set connection information for all tasks
    set_fact:
      aws_connection_info:
        aws_access_key: '{{ aws_access_key }}'
        aws_secret_key: '{{ aws_secret_key }}'
        security_token: '{{ security_token }}'
        region: '{{ aws_region }}'
    no_log: true
  - name: create NLB with listeners
    register: nlb
    ansible.amazon.elb_network_lb:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ nlb_name }}'
      subnets: '{{ nlb_subnets }}'
      state: present
      listeners:
      - Protocol: TCP
        Port: 80
        DefaultActions:
        - Type: forward
          TargetGroupName: '{{ tg_name }}'
      - Protocol: TLS
        Port: 443
        Certificates:
        - CertificateArn: '{{ cert.arn }}'
        DefaultActions:
        - Type: forward
          TargetGroupName: '{{ tg_name }}'
  - assert:
      that:
      - nlb.changed
      - nlb.listeners|length == 2
  - name: test idempotence creating NLB with listeners
    register: nlb
    ansible.amazon.elb_network_lb:
      aws_access_key: '{{ aws_access_key }}'
      aws_secret_key: '{{ aws_secret_key }}'
      security_token: '{{ security_token }}'
      region: '{{ aws_region }}'
      name: '{{ nlb_name }}'
      subnets: '{{ nlb_subnets }}'
      state: present
      listeners:
      - Protocol: TCP
        Port: 80
        DefaultActions:
        - Type: forward
          TargetGroupName: '{{ tg_name }}'
      - Protocol: TLS
        Port: 443
        Certificates:
        - CertificateArn: '{{ cert.arn }}'
        DefaultActions:
        - Type: forward
          TargetGroupName: '{{ tg_name }}'
  - assert:
      that:
      - not nlb.changed
      - nlb.listeners|length == 2
